## Start tracking a project
$ git init
## creates a .git directory in the current directory
## this now is your 'working directory' since it contains the .git directory

## To see what files are tracking and untracked in your working directory
$ git status
##  untracked means Git sees a file that was not in the last snapshot (commit)
## Git does not track such a file until you tell it to do so with an 'add'.

## To begin tracking a file
$ git add <filename>
## this adds it to the tracking list and stages it as part of an index
## the file is staged, ready to be commit to the repository.

## Use this to see what files have been staged ready for commit to repo
$ git diff -staged
## it's hard to read 

## once you're happy with what has beed added and staged, you can commit
## your changes. files that were not 'add'ed since last edit won't go in 
## this commit..they just sit as modified files unitl you 'add' them
## to the staging area from your working area.

$ git commit

## commits the files that were staged
## Remember that the commit records the snapshot you set up in your staging area.
## Anything you didn’t stage is still sitting there modified; 
## you can do another commit to add it to your history. 
## Every time you perform a commit, 
## you’re recording a snapshot of your project that you can revert to 
## or compare to later.
